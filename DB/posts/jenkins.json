{
  "title": "3/29/2015: Jenkins & I.. RUNITED!",
  "post": "One of my favorite developers left the company I work to persue a new job, good for him! He was one of the few people left who were passionate about changing the course of our tech team from relying on manual testing, and was supporting almost all of the test infrastructure on his own. I won't go in to great deal of said 'test infrastructure' since it's not that much to speak of, but the most glaring issue was that no one would be supporting Bamboo with him leaving. I have worked with Bamboo a little bit before but I was always turned off by their shifty community of plugins (don't get me started), plus the license was about to expire for our Bamboo install. How fortuitous! I have been using Jenkins for a while now so I saw this as my chance to get us to ditch Bamboo and start fresh with Jenkins. I was like a kid in a candy store after setting up the fresh install, grabbing every plugin I could imagine being remotely useful for us, or even if it wasn't that useful it would be interesting to look at. This Bamboo > Jenkins switch started about a month ago, and as of last week it looks like we're fully migrated over to Jenkins and even have the test pipeline looking better than it did before! Great success! Besides all the fun of playing with shiny new toys, work has been getting somewhat trying. The senior QA engineer quit to persue a different job (good for him as well!) which left quality assurance in a very dubious state. This was basically a breaking point for me, I hadn't been incredibly satisfied with my job in the past few months due to an huge spike in manual testing and time for creating very basic pieces of an automated testing framework was thrown out the window. A pile of meetings and conversations later we've finally convinced management that the value of manual testing may seem better from a very narrow view, in the long run it will cost us in technical debt, and possibly more employee exits. So for now we've been aforded a little bit of extra time to work on it. It's a small victory in my opinion, allowing me time to work on getting our tech team some better tools to work with is a step in the right direction but, the entire tech team needs to commit to this not as a pet project but as a project vital to our company staying in the modern era of software development. I don't want to overload this post, will continue it in a few days!"
}
